<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="AppUIBasics.ControlPages.InfoBarPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:AppUIBasics"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:controls="using:Microsoft.UI.Xaml.Controls"
      mc:Ignorable="d">
    <StackPanel>
        <local:ControlExample x:Name="Example1" HeaderText="A closable InfoBar with an icon, title, and message.">
            <local:ControlExample.Example>
                <controls:InfoBar x:Name="TestInfoBar" AutomationProperties.Name="TestInfoBar"
                IsOpen="True"
                Title="Title"
                Message="Essential app message for your users to be informed of, acknowledge, or take action on."
                Severity="Informational"/>

            </local:ControlExample.Example>
            <local:ControlExample.Options>
                <StackPanel>
                    <CheckBox x:Name="IsOpenCheckBox" AutomationProperties.Name="IsOpenCheckBox" Content="Is Open" IsChecked="{x:Bind TestInfoBar.IsOpen, Mode=TwoWay}"/>
                    <ComboBox x:Name="SeverityComboBox" AutomationProperties.Name="SeverityComboBox" Header="Severity" SelectionChanged="SeverityComboBox_SelectionChanged" SelectedValue="Informational">
                        <x:String>Informational</x:String>
                        <x:String>Success</x:String>
                        <x:String>Warning</x:String>
                        <x:String>Error</x:String>
                    </ComboBox>
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;InfoBar 
    IsOpen="$(IsOpen)"
    Severity="$(Severity)"
    Title="Title"
    Message="Essential app message for your users to be informed of, acknowledge, or take action on." /&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="Severity" Value="{x:Bind SeverityComboBox.SelectedValue, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="IsOpen" Value="{ x:Bind IsOpenCheckBox.IsChecked.Value, Mode=OneWay}" />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
        <!-- TODO: add button example with long and short message -->
        <!-- TODO: add example that removes icon and close button -->
    </StackPanel>
</Page>
